// <auto-generated />
using System;
using HouseholdManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseholdManager.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220418185314_AddedLinkToRecipe")]
    partial class AddedLinkToRecipe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("HouseholdManager.Models.Household", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Households");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.Recipe", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipeLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.HasIndex("RecipeListId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecipeName");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.RecipeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HouseholdId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RecipeLists");
                });

            modelBuilder.Entity("HouseholdManager.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HouseholdUser", b =>
                {
                    b.Property<int>("HouseholdsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsersUsername")
                        .HasColumnType("TEXT");

                    b.HasKey("HouseholdsId", "UsersUsername");

                    b.HasIndex("UsersUsername");

                    b.ToTable("HouseholdUser");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.Recipe", b =>
                {
                    b.HasOne("HouseholdManager.Models.Recipes.RecipeList", null)
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeListId");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.RecipeIngredient", b =>
                {
                    b.HasOne("HouseholdManager.Models.Recipes.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeName");
                });

            modelBuilder.Entity("HouseholdUser", b =>
                {
                    b.HasOne("HouseholdManager.Models.Household", null)
                        .WithMany()
                        .HasForeignKey("HouseholdsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HouseholdManager.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("HouseholdManager.Models.Recipes.RecipeList", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
